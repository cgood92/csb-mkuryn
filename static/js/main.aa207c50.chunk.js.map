{"version":3,"sources":["pyodideContext.js","python/base.js","loadPyodide.js","insights/graphs/python/adultGender.js","insights/graphs/python/ages18plus.js","insights/graphs/python/allAges.js","insights/graphs/python/marriageStatus.js","insights/graphs/python/moveInDate.js","insights/graphs/python/numberInHousehold.js","insights/graphs/python/numberOfCallings.js","insights/graphs/python/rmStatus.js","insights/graphs/python/timeInCalling.js","insights/graphs/graph.js","insights/graphs/index.js","insights/factsSheet.js","insights/tabs.js","insights/compareSheet.js","insights/index.js","landing.js","body.js","python/globalUtilities.js","header.js","App.js","index.js"],"names":["createContext","base","file","URL","createObjectURL","loadScript","src","Promise","resolve","script","document","createElement","onload","head","appendChild","window","process","loadPyodide","fullStdLib","pyodide","loadPackage","adultGender","unit","JSON","stringify","ages18plus","allAges","marriageStatus","moveInDate","numberInHousehold","numberOfCallings","rmStatus","timeInCalling","Graph","python","useState","isError","setError","setSrc","useContext","PyodideContext","useEffect","runPythonAsync","then","catch","error","console","status","title","subTitle","width","preview","mask","style","padding","Loading","height","display","alignItems","justifyContent","size","AdultGender","Ages18plus","AllAges","MarriageStatus","MoveInDate","NumberInHousehold","NumberOfCallings","RmStatus","TimeInCalling","FactsSheet","orientation","plain","span","TabPane","Tabs","TabsComponent","units","defaultActiveKey","map","tab","Option","Select","CompareSheet","selectedUnits","setSelectedUnits","mode","allowClear","defaultValue","onChange","renderGraphForUnits","Component","Insights","showCompareSelected","setShowCompareSelected","useMemo","runPython","toJs","hasMultipleUnits","length","toggleCompare","useCallback","prev","checkedChildren","unCheckedChildren","Step","Steps","Landing","onUpload","Title","level","direction","description","type","accept","pyodideLoadable","Body","isReady","setReady","isLoading","setLoading","setPyodide","handleUpload","event","target","files","basePython","Provider","value","Header","color","App","minHeight","Content","Footer","setTimeout","rootElement","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.aa207c50.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport default createContext();\n","export default function base({ file }) {\n  return `\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import pyodide\n    import io, base64\n\n    def prepareData():\n      df['Number of Callings'] = list(map(lambda string: \"0 calling(s)\" if pd.isna(string) else str(len(getDateInCalling(string))) + \" calling(s)\", df['Callings with Date Sustained'].tolist()))\n\n    df = pd.read_csv(pyodide.open_url(\"${URL.createObjectURL(file)}\"))\n\n    prepareData()\n  `;\n}\n","function loadScript(src) {\n  return new Promise((resolve) => {\n    var script = document.createElement(\"script\");\n    script.onload = function () {\n      resolve();\n    };\n    script.src = src;\n\n    document.head.appendChild(script);\n  });\n}\n\nexport default async function fetchPyodide() {\n  // TODO: figure out better long-term solution, but this resolves a \"require not defined\" error\n  delete window.process;\n  await loadScript(\"https://cdn.jsdelivr.net/pyodide/v0.20.0/full/pyodide.js\");\n  const pyodide = await loadPyodide({ fullStdLib: false });\n  await pyodide.loadPackage([\"pandas\", \"matplotlib\"]);\n\n  return pyodide;\n}\n","export default function adultGender({ unit }) {\n  return `\n  def adultGender(df, unit):\n    data = df[df[\"Age\"] >= 18].replace({ \"M\": \"Male\", \"F\": \"Female\" }).groupby('Gender').size()\n    plt.figure(facecolor='white')\n    pie = data.plot.pie(figsize=(12,12), autopct=lambda p : '{:.0f}%  ({:,.0f})'.format(p,p * sum(data)/100), ylabel='', colors = ['pink', 'lightblue'])\n    plt.title(makeLabel('Members (18+) gender', unit))\n      \n    return figureToString(pie.get_figure())\n  \n  adultGender(getFilteredData(${JSON.stringify(unit)}), ${JSON.stringify(unit)})\n  `;\n}\n","export default function ages18plus({ unit }) {\n  return `\n  def ages18plus(df, unit):\n    age = df['Age'][df[\"Age\"] >= 18]\n    \n    fig, ax = plt.subplots(figsize = (18,12), facecolor='white')\n    age.plot(kind = \"hist\", bins = 20)\n    \n    labelMedian(age.median(), 0.6)\n    ax.set_title(makeLabel(\"Ages 18+\", unit))\n    ax.set_xlabel(\"Age\")\n    removeLeft(ax)\n    \n    return figureToString(fig)\n  \n  ages18plus(getFilteredData(${JSON.stringify(unit)}), ${JSON.stringify(unit)})\n  `;\n}\n","export default function allAges({ unit }) {\n  return `\n  def allAges(df, unit):\n      age = df['Age']\n      \n      fig, ax = plt.subplots(figsize = (18, 12), facecolor='white')\n      age.plot(kind = \"hist\", bins = 20)\n      \n      labelMedian(age.median())\n      ax.set_title(makeLabel(\"All ages\", unit))\n      ax.set_xlabel(\"Age\")\n      \n      return figureToString(fig)\n  \n  allAges(getFilteredData(${JSON.stringify(unit)}), ${JSON.stringify(unit)})\n  `;\n}\n","export default function marriageStatus({ unit }) {\n  return `\n  def marriageStatus(df, unit):\n    data = df[df[\"Age\"] >= 18].groupby('Marriage Status').size()\n    plt.figure(facecolor='white')\n    pie = data.plot.pie(figsize=(12,12), autopct=lambda p : '{:.0f}%  ({:,.0f})'.format(p,p * sum(data)/100), ylabel='')\n    plt.title(makeLabel('Members (18+) marriage status', unit))\n      \n    return figureToString(pie.get_figure())\n  \n  marriageStatus(getFilteredData(${JSON.stringify(unit)}), ${JSON.stringify(\n    unit\n  )})\n  `;\n}\n","export default function moveInDate({ unit }) {\n  return `\n  def moveInDate(df, unit):\n    moveInDates = df.drop_duplicates(['Address - Street 1'])['Move In Date'].apply(lambda dateString: diffMonth(date.today(), datetime.strptime(dateString, '%d-%b-%y'))).tolist()\n      \n    fig, ax = plt.subplots(figsize = (18,12), facecolor='white')\n    plt.hist(moveInDates, bins=36)\n\n    removeLeft(ax)\n    labelMedian(np.median(moveInDates))\n    ax.set_title(makeLabel(\"Time in ward\", unit))\n    ax.set_xlabel(\"Months in ward\")\n    ax.set_ylabel(\"Households\")\n      \n    return figureToString(fig)\n  \n  moveInDate(getFilteredData(${JSON.stringify(unit)}), ${JSON.stringify(unit)})\n  `;\n}\n","export default function numberInHousehold({ unit }) {\n  return `\n  def numberInHousehold(df, unit):\n    plt.figure(facecolor='white')\n    boxplot = df.groupby('Address - Street 1').size().plot.box(figsize = (18,12), title = makeLabel(\"Number of records in household\", unit), vert=False)\n\n    return figureToString(boxplot.get_figure())\n  \n  numberInHousehold(getFilteredData(${JSON.stringify(unit)}), ${JSON.stringify(\n    unit\n  )})\n  `;\n}\n","export default function numberOfCallings({ unit }) {\n  return `\n  def numberOfCallings(df, unit):\n    data = df[df[\"Age\"] >= 18].groupby('Number of Callings').size()\n\n    plt.figure(facecolor='white')\n    pie = data.plot.pie(figsize=(12,12), autopct=lambda p : '{:.0f}%  ({:,.0f})'.format(p,p * sum(data)/100), ylabel='')\n    plt.title(makeLabel('Members (18+) with callings', unit))\n      \n    return figureToString(pie.get_figure())\n  \n  numberOfCallings(getFilteredData(${JSON.stringify(unit)}), ${JSON.stringify(\n    unit\n  )})\n  `;\n}\n","export default function rmStatus({ unit }) {\n  return `\n  def rmStatus(df, unit):\n    data = df[df[\"Age\"] >= 20].groupby('Is Returned Missionary').size()\n    plt.figure(facecolor='white')\n    pie = data.plot.pie(figsize=(12,12), autopct=lambda p : '{:.0f}%  ({:,.0f})'.format(p,p * sum(data)/100), ylabel='')\n    plt.title(makeLabel('Members (20+) that are returned missionaries', unit))\n      \n    return figureToString(pie.get_figure())\n  \n  rmStatus(getFilteredData(${JSON.stringify(unit)}), ${JSON.stringify(unit)})\n  `;\n}\n","export default function timeInCalling({ unit }) {\n  return `\n  def timeInCalling(df, unit):\n    timeInCallings = flattenList(df[df['Callings with Date Sustained'].notnull()]['Callings with Date Sustained'].apply(getDateInCalling).tolist())\n      \n    fig, ax = plt.subplots(figsize = (18,12), facecolor='white')\n    plt.hist(timeInCallings, bins=24)\n    \n    labelMedian(np.median(timeInCallings))\n    ax.set_title(makeLabel(\"Time in calling\", unit))\n    ax.set_xlabel(\"Months in calling\")\n    removeLeft(ax)\n    \n    return figureToString(fig)\n  \n  timeInCalling(getFilteredData(${JSON.stringify(unit)}), ${JSON.stringify(\n    unit\n  )})\n  `;\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Image, Result, Spin } from \"antd\";\nimport PyodideContext from \"../../pyodideContext\";\n\nexport default function Graph({ python }) {\n  const [isError, setError] = useState(false);\n  const [src, setSrc] = useState();\n  const pyodide = useContext(PyodideContext);\n\n  useEffect(() => {\n    pyodide\n      .runPythonAsync(python)\n      .then(setSrc)\n      .catch((error) => {\n        setError(true);\n        console.error(error);\n      });\n  }, [pyodide, python]);\n\n  if (isError) {\n    return (\n      <Result\n        status=\"error\"\n        title=\"Chart failed to load\"\n        subTitle=\"Sorry for the inconvenience\"\n      />\n    );\n  }\n\n  if (src) {\n    return (\n      <Image\n        src={src}\n        width=\"100%\"\n        preview={{ mask: null }}\n        style={{ padding: 8 }}\n      />\n    );\n  }\n\n  return <Loading />;\n}\n\nfunction Loading() {\n  return (\n    <div\n      style={{\n        height: 400,\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }}\n    >\n      <Spin size=\"large\" />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport adultGender from \"./python/adultGender\";\nimport ages18plus from \"./python/ages18plus\";\nimport allAges from \"./python/allAges\";\nimport marriageStatus from \"./python/marriageStatus\";\nimport moveInDate from \"./python/moveInDate\";\nimport numberInHousehold from \"./python/numberInHousehold\";\nimport numberOfCallings from \"./python/numberOfCallings\";\nimport rmStatus from \"./python/rmStatus\";\nimport timeInCalling from \"./python/timeInCalling\";\n\nimport Graph from \"./graph\";\n\nexport const AdultGender = ({ unit }) => (\n  <Graph python={adultGender({ unit })} />\n);\nexport const Ages18plus = ({ unit }) => <Graph python={ages18plus({ unit })} />;\nexport const AllAges = ({ unit }) => <Graph python={allAges({ unit })} />;\nexport const MarriageStatus = ({ unit }) => (\n  <Graph python={marriageStatus({ unit })} />\n);\nexport const MoveInDate = ({ unit }) => <Graph python={moveInDate({ unit })} />;\nexport const NumberInHousehold = ({ unit }) => (\n  <Graph python={numberInHousehold({ unit })} />\n);\nexport const NumberOfCallings = ({ unit }) => (\n  <Graph python={numberOfCallings({ unit })} />\n);\nexport const RmStatus = ({ unit }) => <Graph python={rmStatus({ unit })} />;\nexport const TimeInCalling = ({ unit }) => (\n  <Graph python={timeInCalling({ unit })} />\n);\n","import React from \"react\";\nimport { Col, Divider, Row } from \"antd\";\n\nimport {\n  AdultGender,\n  Ages18plus,\n  AllAges,\n  MarriageStatus,\n  MoveInDate,\n  NumberInHousehold,\n  NumberOfCallings,\n  RmStatus,\n  TimeInCalling\n} from \"./graphs\";\n\nexport default function FactsSheet({ unit }) {\n  return (\n    <div>\n      <Divider orientation=\"left\" plain>\n        General facts\n      </Divider>\n      <Row>\n        <Col span={12}>\n          <AllAges unit={unit} />\n        </Col>\n        <Col span={12}>\n          <Ages18plus unit={unit} />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={12}>\n          <MoveInDate unit={unit} />\n        </Col>\n        <Col span={12}>\n          <AdultGender unit={unit} />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={12}>\n          <MarriageStatus unit={unit} />\n        </Col>\n        <Col span={12}>\n          <NumberInHousehold unit={unit} />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={12}>\n          <RmStatus unit={unit} />\n        </Col>\n      </Row>\n      <Divider orientation=\"left\" plain>\n        Callings\n      </Divider>\n      <Row>\n        <Col span={12}>\n          <TimeInCalling unit={unit} />\n        </Col>\n        <Col span={12}>\n          <NumberOfCallings unit={unit} />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Tabs } from \"antd\";\n\nimport FactsSheet from \"./factsSheet\";\n\nconst { TabPane } = Tabs;\n\nexport default function TabsComponent({ units }) {\n  return (\n    <Tabs defaultActiveKey={units[0]}>\n      {units.map((unit) => (\n        <TabPane tab={unit} key={unit}>\n          <FactsSheet unit={unit} />\n        </TabPane>\n      ))}\n    </Tabs>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Col, Divider, Row, Select } from \"antd\";\n\nimport {\n  AdultGender,\n  Ages18plus,\n  AllAges,\n  MarriageStatus,\n  MoveInDate,\n  NumberInHousehold,\n  NumberOfCallings,\n  RmStatus,\n  TimeInCalling\n} from \"./graphs\";\n\nconst { Option } = Select;\n\nexport default function CompareSheet({ units }) {\n  const [selectedUnits, setSelectedUnits] = useState(units);\n\n  return (\n    <section>\n      <header>\n        Units to compare:\n        <Select\n          mode=\"multiple\"\n          allowClear\n          style={{ width: \"100%\" }}\n          defaultValue={units}\n          onChange={setSelectedUnits}\n        >\n          {units.map((unit) => (\n            <Option key={unit}>{unit}</Option>\n          ))}\n        </Select>\n      </header>\n      <div>\n        {renderGraphForUnits(selectedUnits, AllAges)}\n        {renderGraphForUnits(selectedUnits, Ages18plus)}\n        {renderGraphForUnits(selectedUnits, MoveInDate)}\n        {renderGraphForUnits(selectedUnits, AdultGender)}\n        {renderGraphForUnits(selectedUnits, MarriageStatus)}\n        {renderGraphForUnits(selectedUnits, NumberInHousehold)}\n        {renderGraphForUnits(selectedUnits, RmStatus)}\n        {renderGraphForUnits(selectedUnits, TimeInCalling)}\n        {renderGraphForUnits(selectedUnits, NumberOfCallings)}\n      </div>\n    </section>\n  );\n}\n\nfunction renderGraphForUnits(units, Component) {\n  return (\n    <>\n      <Divider />\n      <Row>\n        {units.map((unit) => (\n          <Col span={12} key={unit}>\n            <Component unit={unit} />\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n","import React, { useCallback, useContext, useMemo, useState } from \"react\";\nimport { Switch } from \"antd\";\n\nimport PyodideContext from \"../pyodideContext\";\nimport Tabs from \"./tabs\";\nimport CompareSheet from \"./compareSheet\";\n\nexport default function Insights() {\n  const pyodide = useContext(PyodideContext);\n  const [showCompareSelected, setShowCompareSelected] = useState(false);\n\n  const units = useMemo(() => pyodide.runPython(getUnits()).toJs(), [pyodide]);\n  const hasMultipleUnits = units.length > 1;\n\n  const toggleCompare = useCallback(\n    () => setShowCompareSelected((prev) => !prev),\n    []\n  );\n\n  return (\n    <main>\n      {hasMultipleUnits && (\n        <Switch\n          checkedChildren=\"Comparing\"\n          unCheckedChildren=\"Not comparing\"\n          onChange={toggleCompare}\n        />\n      )}\n      {showCompareSelected ? (\n        <CompareSheet units={units} />\n      ) : (\n        <Tabs units={units} />\n      )}\n    </main>\n  );\n}\n\nfunction getUnits() {\n  return `\n  df.Unit.unique().tolist()\n  `;\n}\n","import React from \"react\";\n\nimport { Steps, Typography } from \"antd\";\n\nconst { Step } = Steps;\n\nexport default function Landing({ onUpload }) {\n  return (\n    <main>\n      <Typography.Title level={3}>How this works</Typography.Title>\n      <Steps direction=\"vertical\">\n        <Step\n          title=\"Get the CSV file\"\n          description={<div>PLACEHOLDER VIDEO</div>}\n        />\n        <Step\n          status=\"current\"\n          title=\"Select the CSV file\"\n          description={\n            <section>\n              <p>\n                Don't worry, this file does not get uploaded or leave your\n                computer. This application is all client-side, there is no\n                server computation or storage of your file, so it is\n                confidential and safe.\n              </p>\n              <input type=\"file\" onChange={onUpload} accept=\".csv\" />\n            </section>\n          }\n        />\n        <Step status=\"current\" title=\"Prayerfully consider the output\" />\n      </Steps>\n    </main>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport PyodideContext from \"./pyodideContext\";\nimport basePython from \"./python/base\";\nimport globalUtilities from \"./python/globalUtilities\";\nimport loadPyodide from \"./loadPyodide\";\nimport Insights from \"./insights\";\nimport Landing from \"./landing\";\n\nlet pyodideLoadable = null;\n\nsetTimeout(() => {\n  pyodideLoadable = loadPyodide();\n}, 1000);\n\nexport default function Body() {\n  const [isReady, setReady] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [pyodide, setPyodide] = useState();\n\n  const handleUpload = useCallback(async (event) => {\n    setLoading(true);\n\n    const file = event.target.files[0];\n\n    const pyodide = await pyodideLoadable;\n    await pyodide.runPythonAsync(globalUtilities());\n    await pyodide.runPythonAsync(basePython({ file }));\n\n    setReady(true);\n    setLoading(false);\n    setPyodide(pyodide);\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading the goodness...</div>;\n  }\n\n  if (isReady) {\n    return (\n      <PyodideContext.Provider value={pyodide}>\n        <Insights />\n      </PyodideContext.Provider>\n    );\n  }\n\n  return (\n    <div>\n      <Landing onUpload={handleUpload} />\n    </div>\n  );\n}\n","export default function globalUtilities() {\n  return `\n  import re\n  from datetime import datetime\n  from datetime import date\n\n  def figureToString(fig):\n    buf = io.BytesIO()\n    fig.savefig(buf, format='png')\n    buf.seek(0)\n    \n    return 'data:image/png;base64,' + base64.b64encode(buf.read()).decode('UTF-8')\n\n  \n  def labelMedian(median, x = 1.05):\n    plt.axvline(median, color='k', linestyle='dashed', linewidth=1)\n    min_ylim, max_ylim = plt.ylim()\n    plt.text(median*x, max_ylim*0.5, 'Median: {:.0f}'.format(median))\n    \n  def removeLeft(ax):\n    # Remove ticks and spines\n    ax.tick_params(left = False, bottom = False)\n    # ax.set_yticks([])\n    ax.set_ylabel(\"Members\")\n    for ax, spine in ax.spines.items():\n        spine.set_visible(False)\n\n  def makeLabel(label, unit):\n    return unit + \" - \" + label\n\n  def getFilteredData(unit):\n    return df[df['Unit'] == unit]\n\n  def getDateInCalling(rawValue):\n    dateStrings = re.findall(\"\\\\([^\\\\)]+\\\\)\", rawValue)\n    return list(map(lambda dateString: diffMonth(date.today(), datetime.strptime(dateString[1:-1], '%d %b %Y')), dateStrings))\n    \n  def diffMonth(date1, date2):\n      return (date1.year - date2.year) * 12 + date1.month - date2.month\n\n  def flattenList(regular_list):\n      return [item for sublist in regular_list for item in sublist]\n  `;\n}\n","import React from \"react\";\n\nimport { Typography } from \"antd\";\n\nexport default function Header() {\n  return (\n    <Typography.Title level={1}>\n      <span style={{ color: \"white\" }}>Senine Statistics</span>\n    </Typography.Title>\n  );\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport \"antd/dist/antd.css\";\n\nimport { Layout } from \"antd\";\n\nimport Body from \"./body\";\nimport Header from \"./header\";\n\nexport default function App() {\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Layout.Header>\n        <Header />\n      </Layout.Header>\n      <Layout.Content style={{ padding: \"8px 16px 8px 16px\" }}>\n        <Body />\n      </Layout.Content>\n      <Layout.Footer></Layout.Footer>\n    </Layout>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}