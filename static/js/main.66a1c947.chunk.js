(this["webpackJsonpsenine-statistics"]=this["webpackJsonpsenine-statistics"]||[]).push([[0],{135:function(e,t,n){},212:function(e,t,n){"use strict";n.r(t);var i=n(0),a=n(116),r=(n(135),n(136),n(223)),s=n(61),c=n(76),l=n(28),u=Object(i.createContext)();function o(e){var t=e.file;return'\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import pyodide\n    import io, base64\n\n    def prepareData():\n      df[\'Number of Callings\'] = list(map(lambda string: "0 calling(s)" if pd.isna(string) else str(len(getDateInCalling(string))) + " calling(s)", df[\'Callings with Date Sustained\'].tolist()))\n\n    df = pd.read_csv(pyodide.open_url("'.concat(URL.createObjectURL(t),'"))\n\n    prepareData()\n  ')}function d(e){return new Promise((function(t){var n=document.createElement("script");n.onload=function(){t()},n.src=e,document.head.appendChild(n)}))}function f(){return(f=Object(c.a)(Object(s.a)().mark((function e(){var t;return Object(s.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return delete window.process,e.next=3,d("https://cdn.jsdelivr.net/pyodide/v0.20.0/full/pyodide.js");case 3:return e.next=5,loadPyodide({fullStdLib:!1});case 5:return t=e.sent,e.next=8,t.loadPackage(["pandas","matplotlib"]);case 8:return e.abrupt("return",t);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var b=n(220),j=n(217),p=n(215),g=n(224),O=n(225);function m(e){var t=e.unit;return"\n  def adultGender(df, unit):\n    data = df[df[\"Age\"] >= 18].replace({ \"M\": \"Male\", \"F\": \"Female\" }).groupby('Gender').size()\n    plt.figure(facecolor='white')\n    pie = data.plot.pie(figsize=(12,12), autopct=lambda p : '{:.0f}%  ({:,.0f})'.format(p,p * sum(data)/100), ylabel='', colors = ['pink', 'lightblue'])\n    plt.title(makeLabel('Members (18+) gender', unit))\n      \n    return figureToString(pie.get_figure())\n  \n  adultGender(getFilteredData(".concat(JSON.stringify(t),"), ").concat(JSON.stringify(t),")\n  ")}function x(e){var t=e.unit;return'\n  def ages18plus(df, unit):\n    age = df[\'Age\'][df["Age"] >= 18]\n    \n    fig, ax = plt.subplots(figsize = (18,12), facecolor=\'white\')\n    age.plot(kind = "hist", bins = 20)\n    \n    labelMedian(age.median(), 0.6)\n    ax.set_title(makeLabel("Ages 18+", unit))\n    ax.set_xlabel("Age")\n    removeLeft(ax)\n    \n    return figureToString(fig)\n  \n  ages18plus(getFilteredData('.concat(JSON.stringify(t),"), ").concat(JSON.stringify(t),")\n  ")}function h(e){var t=e.unit;return'\n  def allAges(df, unit):\n      age = df[\'Age\']\n      \n      fig, ax = plt.subplots(figsize = (18, 12), facecolor=\'white\')\n      age.plot(kind = "hist", bins = 20)\n      \n      labelMedian(age.median())\n      ax.set_title(makeLabel("All ages", unit))\n      ax.set_xlabel("Age")\n      \n      return figureToString(fig)\n  \n  allAges(getFilteredData('.concat(JSON.stringify(t),"), ").concat(JSON.stringify(t),")\n  ")}function y(e){var t=e.unit;return"\n  def marriageStatus(df, unit):\n    data = df[df[\"Age\"] >= 18].groupby('Marriage Status').size()\n    plt.figure(facecolor='white')\n    pie = data.plot.pie(figsize=(12,12), autopct=lambda p : '{:.0f}%  ({:,.0f})'.format(p,p * sum(data)/100), ylabel='')\n    plt.title(makeLabel('Members (18+) marriage status', unit))\n      \n    return figureToString(pie.get_figure())\n  \n  marriageStatus(getFilteredData(".concat(JSON.stringify(t),"), ").concat(JSON.stringify(t),")\n  ")}function v(e){var t=e.unit;return"\n  def moveInDate(df, unit):\n    moveInDates = df.drop_duplicates(['Address - Street 1'])['Move In Date'].apply(lambda dateString: diffMonth(date.today(), datetime.strptime(dateString, '%d-%b-%y'))).tolist()\n      \n    fig, ax = plt.subplots(figsize = (18,12), facecolor='white')\n    plt.hist(moveInDates, bins=36)\n\n    removeLeft(ax)\n    labelMedian(np.median(moveInDates))\n    ax.set_title(makeLabel(\"Time in ward\", unit))\n    ax.set_xlabel(\"Months in ward\")\n    ax.set_ylabel(\"Households\")\n      \n    return figureToString(fig)\n  \n  moveInDate(getFilteredData(".concat(JSON.stringify(t),"), ").concat(JSON.stringify(t),")\n  ")}function S(e){var t=e.unit;return"\n  def numberInHousehold(df, unit):\n    plt.figure(facecolor='white')\n    boxplot = df.groupby('Address - Street 1').size().plot.box(figsize = (18,12), title = makeLabel(\"Number of records in household\", unit), vert=False)\n\n    return figureToString(boxplot.get_figure())\n  \n  numberInHousehold(getFilteredData(".concat(JSON.stringify(t),"), ").concat(JSON.stringify(t),")\n  ")}function w(e){var t=e.unit;return"\n  def numberOfCallings(df, unit):\n    data = df[df[\"Age\"] >= 18].groupby('Number of Callings').size()\n\n    plt.figure(facecolor='white')\n    pie = data.plot.pie(figsize=(12,12), autopct=lambda p : '{:.0f}%  ({:,.0f})'.format(p,p * sum(data)/100), ylabel='')\n    plt.title(makeLabel('Members (18+) with callings', unit))\n      \n    return figureToString(pie.get_figure())\n  \n  numberOfCallings(getFilteredData(".concat(JSON.stringify(t),"), ").concat(JSON.stringify(t),")\n  ")}function C(e){var t=e.unit;return"\n  def rmStatus(df, unit):\n    data = df[df[\"Age\"] >= 20].groupby('Is Returned Missionary').size()\n    plt.figure(facecolor='white')\n    pie = data.plot.pie(figsize=(12,12), autopct=lambda p : '{:.0f}%  ({:,.0f})'.format(p,p * sum(data)/100), ylabel='')\n    plt.title(makeLabel('Members (20+) that are returned missionaries', unit))\n      \n    return figureToString(pie.get_figure())\n  \n  rmStatus(getFilteredData(".concat(JSON.stringify(t),"), ").concat(JSON.stringify(t),")\n  ")}function k(e){var t=e.unit;return"\n  def timeInCalling(df, unit):\n    timeInCallings = flattenList(df[df['Callings with Date Sustained'].notnull()]['Callings with Date Sustained'].apply(getDateInCalling).tolist())\n      \n    fig, ax = plt.subplots(figsize = (18,12), facecolor='white')\n    plt.hist(timeInCallings, bins=24)\n    \n    labelMedian(np.median(timeInCallings))\n    ax.set_title(makeLabel(\"Time in calling\", unit))\n    ax.set_xlabel(\"Months in calling\")\n    removeLeft(ax)\n    \n    return figureToString(fig)\n  \n  timeInCalling(getFilteredData(".concat(JSON.stringify(t),"), ").concat(JSON.stringify(t),")\n  ")}var D=n(222),_=n(218),M=n(214),L=n(4);function N(e){var t=e.python,n=Object(i.useState)(!1),a=Object(l.a)(n,2),r=a[0],s=a[1],c=Object(i.useState)(),o=Object(l.a)(c,2),d=o[0],f=o[1],b=Object(i.useContext)(u);return Object(i.useEffect)((function(){b.runPythonAsync(t).then(f).catch((function(e){s(!0),console.error(e)}))}),[b,t]),r?Object(L.jsx)(D.a,{status:"error",title:"Chart failed to load",subTitle:"Sorry for the inconvenience"}):d?Object(L.jsx)(_.a,{src:d,width:"100%",preview:{mask:null},style:{padding:8}}):Object(L.jsx)(I,{})}function I(){return Object(L.jsx)("div",{style:{height:400,width:"100%",display:"flex",alignItems:"center",justifyContent:"center"},children:Object(L.jsx)(M.a,{size:"large"})})}var J=function(e){var t=e.unit;return Object(L.jsx)(N,{python:m({unit:t})})},A=function(e){var t=e.unit;return Object(L.jsx)(N,{python:x({unit:t})})},F=function(e){var t=e.unit;return Object(L.jsx)(N,{python:h({unit:t})})},T=function(e){var t=e.unit;return Object(L.jsx)(N,{python:y({unit:t})})},z=function(e){var t=e.unit;return Object(L.jsx)(N,{python:v({unit:t})})},P=function(e){var t=e.unit;return Object(L.jsx)(N,{python:S({unit:t})})},U=function(e){var t=e.unit;return Object(L.jsx)(N,{python:w({unit:t})})},H=function(e){var t=e.unit;return Object(L.jsx)(N,{python:C({unit:t})})},E=function(e){var t=e.unit;return Object(L.jsx)(N,{python:k({unit:t})})};function R(e){var t=e.unit;return Object(L.jsxs)("div",{children:[Object(L.jsx)(p.a,{orientation:"left",plain:!0,children:"General facts"}),Object(L.jsxs)(g.a,{children:[Object(L.jsx)(O.a,{span:12,children:Object(L.jsx)(F,{unit:t})}),Object(L.jsx)(O.a,{span:12,children:Object(L.jsx)(A,{unit:t})})]}),Object(L.jsxs)(g.a,{children:[Object(L.jsx)(O.a,{span:12,children:Object(L.jsx)(z,{unit:t})}),Object(L.jsx)(O.a,{span:12,children:Object(L.jsx)(J,{unit:t})})]}),Object(L.jsxs)(g.a,{children:[Object(L.jsx)(O.a,{span:12,children:Object(L.jsx)(T,{unit:t})}),Object(L.jsx)(O.a,{span:12,children:Object(L.jsx)(P,{unit:t})})]}),Object(L.jsx)(g.a,{children:Object(L.jsx)(O.a,{span:12,children:Object(L.jsx)(H,{unit:t})})}),Object(L.jsx)(p.a,{orientation:"left",plain:!0,children:"Callings"}),Object(L.jsxs)(g.a,{children:[Object(L.jsx)(O.a,{span:12,children:Object(L.jsx)(E,{unit:t})}),Object(L.jsx)(O.a,{span:12,children:Object(L.jsx)(U,{unit:t})})]})]})}var V=j.a.TabPane;function G(e){var t=e.units;return Object(L.jsx)(j.a,{defaultActiveKey:t[0],children:t.map((function(e){return Object(L.jsx)(V,{tab:e,children:Object(L.jsx)(R,{unit:e})},e)}))})}var B=n(221),q=B.a.Option;function K(e){var t=e.units,n=Object(i.useState)(t),a=Object(l.a)(n,2),r=a[0],s=a[1];return Object(L.jsxs)("section",{children:[Object(L.jsxs)("header",{children:["Units to compare:",Object(L.jsx)(B.a,{mode:"multiple",allowClear:!0,style:{width:"100%"},defaultValue:t,onChange:s,children:t.map((function(e){return Object(L.jsx)(q,{children:e},e)}))})]}),Object(L.jsxs)("div",{children:[Y(r,F),Y(r,A),Y(r,z),Y(r,J),Y(r,T),Y(r,P),Y(r,H),Y(r,E),Y(r,U)]})]})}function Y(e,t){return Object(L.jsxs)(L.Fragment,{children:[Object(L.jsx)(p.a,{}),Object(L.jsx)(g.a,{children:e.map((function(e){return Object(L.jsx)(O.a,{span:12,children:Object(L.jsx)(t,{unit:e})},e)}))})]})}function Q(){var e=Object(i.useContext)(u),t=Object(i.useState)(!1),n=Object(l.a)(t,2),a=n[0],r=n[1],s=Object(i.useMemo)((function(){return e.runPython("\n  df.Unit.unique().tolist()\n  ").toJs()}),[e]),c=s.length>1,o=Object(i.useCallback)((function(){return r((function(e){return!e}))}),[]);return Object(L.jsxs)("main",{children:[c&&Object(L.jsx)(b.a,{checkedChildren:"Comparing",unCheckedChildren:"Not comparing",onChange:o}),a?Object(L.jsx)(K,{units:s}):Object(L.jsx)(G,{units:s})]})}var W=n(219),X=n(216),Z=W.a.Step;function $(e){var t=e.onUpload;return Object(L.jsxs)("main",{children:[Object(L.jsx)(X.a.Title,{level:3,children:"How this works"}),Object(L.jsxs)(W.a,{direction:"vertical",children:[Object(L.jsx)(Z,{title:"Get the CSV file",description:Object(L.jsx)("div",{children:"PLACEHOLDER VIDEO"})}),Object(L.jsx)(Z,{status:"current",title:"Select the CSV file",description:Object(L.jsxs)("section",{children:[Object(L.jsx)("p",{children:"Don't worry, this file does not get uploaded or leave your computer. This application is all client-side, there is no server computation or storage of your file, so it is confidential and safe."}),Object(L.jsx)("input",{type:"file",onChange:t,accept:".csv"})]})}),Object(L.jsx)(Z,{status:"current",title:"Prayerfully consider the output"})]})]})}var ee=null;function te(){var e=Object(i.useState)(!1),t=Object(l.a)(e,2),n=t[0],a=t[1],r=Object(i.useState)(!1),d=Object(l.a)(r,2),f=d[0],b=d[1],j=Object(i.useState)(),p=Object(l.a)(j,2),g=p[0],O=p[1],m=Object(i.useCallback)(function(){var e=Object(c.a)(Object(s.a)().mark((function e(t){var n,i;return Object(s.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return b(!0),n=t.target.files[0],e.next=4,ee;case 4:return i=e.sent,e.next=7,i.runPythonAsync("\n  import re\n  from datetime import datetime\n  from datetime import date\n\n  def figureToString(fig):\n    buf = io.BytesIO()\n    fig.savefig(buf, format='png')\n    buf.seek(0)\n    \n    return 'data:image/png;base64,' + base64.b64encode(buf.read()).decode('UTF-8')\n\n  \n  def labelMedian(median, x = 1.05):\n    plt.axvline(median, color='k', linestyle='dashed', linewidth=1)\n    min_ylim, max_ylim = plt.ylim()\n    plt.text(median*x, max_ylim*0.5, 'Median: {:.0f}'.format(median))\n    \n  def removeLeft(ax):\n    # Remove ticks and spines\n    ax.tick_params(left = False, bottom = False)\n    # ax.set_yticks([])\n    ax.set_ylabel(\"Members\")\n    for ax, spine in ax.spines.items():\n        spine.set_visible(False)\n\n  def makeLabel(label, unit):\n    return unit + \" - \" + label\n\n  def getFilteredData(unit):\n    return df[df['Unit'] == unit]\n\n  def getDateInCalling(rawValue):\n    dateStrings = re.findall(\"\\([^\\)]+\\)\", rawValue)\n    return list(map(lambda dateString: diffMonth(date.today(), datetime.strptime(dateString[1:-1], '%d %b %Y')), dateStrings))\n    \n  def diffMonth(date1, date2):\n      return (date1.year - date2.year) * 12 + date1.month - date2.month\n\n  def flattenList(regular_list):\n      return [item for sublist in regular_list for item in sublist]\n  ");case 7:return e.next=9,i.runPythonAsync(o({file:n}));case 9:a(!0),b(!1),O(i);case 12:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),[]);return f?Object(L.jsx)("div",{children:"Loading the goodness..."}):n?Object(L.jsx)(u.Provider,{value:g,children:Object(L.jsx)(Q,{})}):Object(L.jsx)("div",{children:Object(L.jsx)($,{onUpload:m})})}function ne(){return Object(L.jsx)(X.a.Title,{level:1,children:Object(L.jsx)("span",{style:{color:"white"},children:"Senine Statistics"})})}function ie(){return Object(L.jsxs)(r.a,{style:{minHeight:"100vh"},children:[Object(L.jsx)(r.a.Header,{children:Object(L.jsx)(ne,{})}),Object(L.jsx)(r.a.Content,{style:{padding:"8px 16px 8px 16px"},children:Object(L.jsx)(te,{})}),Object(L.jsx)(r.a.Footer,{})]})}setTimeout((function(){ee=function(){return f.apply(this,arguments)}()}),1e3);var ae=document.getElementById("root");Object(a.createRoot)(ae).render(Object(L.jsx)(i.StrictMode,{children:Object(L.jsx)(ie,{})}))}},[[212,1,2]]]);
//# sourceMappingURL=main.66a1c947.chunk.js.map